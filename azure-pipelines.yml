# Example MuleSoft API cataloging and governance pipelinr
# Github project is here: https://github.com/dfelcey/my-aws-api-demo
# ToDo:
# - Make parameters more dynamic
# - More testing

variables:
  - name: CATALOG_DESCRIPTOR
    value: 'catalog.yaml'
  - name: ANYPOINT_ORG
    value: '67d9aaea-3ab0-4fb4-8f45-61f48c60c4f2'
  - name: ANYPOINT_ENV
    value: 'Sandbox'
  - name: ANYPOINT_HOST
    value: 'anypoint.mulesoft.com'
  - name: API_FILE
    value: "api.json"
  - name: ASSET
    value: package-tracker-api
  # Include encrypted varialbles
  - group: anypoint-variable-group
  # Get branch
  - name: BRANCH_NAME
    value: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]

trigger:
- master

pool: 
  name: "default"

stages:
- stage: publish_api
  displayName: Exchange
  jobs: 
  - job: catalog_api
    displayName: Catalog API
    steps:
    - bash: |
        if [ -e $(CATALOG_DESCRIPTOR) ]
        then      
          cat $(API_FILE)
          
          echo Environment
          env
          echo Branch: $(BRANCH_NAME)
          echo Configuration...
          cat catalog.yaml

          # Publish API      
          api-catalog publish-asset \
          --trigger-criteria=branches:$(BRANCH_NAME) \
          --organization $(ANYPOINT_ORG) \
          --host=$(ANYPOINT_HOST) \
          --environment=$(ANYPOINT_ENV) \
          --client_id=$(ANYPOINT_CLIENT_ID) \
          --client_secret=$(ANYPOINT_CLIENT_SECRET) > catalog-result.txt
          
          cat catalog-result.txt
          
          # Capture latest version
          while IFS= read -r line
          do
            echo $line
            read -a strarr <<< $line
            if [[ "$line" == "Version"* ]]
            then
              # Catpture version
              VERSION="${strarr[1]}"
              echo "##vso[task.setvariable variable=apiVersion;isOutput=true;]$VERSION"
              echo "Version value is $(VERSION)"
            fi
          done < catalog-result.txt

          echo Latest version $(apiVersion)
        else
          exit 1
        fi
      env:
        ANYPOINT_CLIENT_ID: $(ANYPOINT_CLIENT_ID)
        ANYPOINT_CLIENT_SECRET: $(ANYPOINT_CLIENT_SECRET)
        ANYPOINT_USERNAME: $(ANYPOINT_USERNAME)
        ANYPOINT_PASSWORD: $(ANYPOINT_PASSWORD)
      name: catalog
